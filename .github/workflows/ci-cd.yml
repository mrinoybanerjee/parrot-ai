name: CI/CD

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build and run tests
      run: |
        docker-compose build test
        docker-compose run test
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

  build-backend:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build backend Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: false
        tags: parrot-ai-backend:latest
    - name: Check backend image size
      run: |
        backend_size=$(docker images parrot-ai-backend --format "{{.Size}}")
        echo "Backend image size: $backend_size"
        if [[ $backend_size == *G* ]]; then
          echo "Warning: Backend image size is in GB, which may include the LLM"
          exit 1
        fi

  build-frontend:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build frontend Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: false
        tags: parrot-ai-frontend:latest
    - name: Check frontend image size
      run: |
        frontend_size=$(docker images parrot-ai-frontend --format "{{.Size}}")
        echo "Frontend image size: $frontend_size"
        if [[ $frontend_size == *G* ]]; then
          echo "Warning: Frontend image size is in GB, which may be too large"
          exit 1
        fi

  deploy:
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
    - name: Deploy to production
      run: |
        echo "Deploying to production..."
        # Add your deployment steps here